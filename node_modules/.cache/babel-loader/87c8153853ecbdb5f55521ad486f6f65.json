{"ast":null,"code":"var _jsxFileName = \"/Users/jiangfangwei/Team11-CM-FrontEnd/src/Login.tsx\";\nimport React from \"react\";\nimport { Form, Field, FormElement } from \"@progress/kendo-react-form\";\nimport { Error } from \"@progress/kendo-react-labels\";\nimport { Input } from \"@progress/kendo-react-inputs\";\n\nlet newInput = fieldRenderProps => {\n  let {\n    validationMessage,\n    visited,\n    ...others\n  } = fieldRenderProps;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({}, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  })), visited && validationMessage && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, validationMessage));\n};\n\nexport default function Login() {\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => alert(JSON.stringify(e, null, 2)),\n    render: formRenderProps => /*#__PURE__*/React.createElement(FormElement, {\n      style: {\n        maxWidth: 1000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"k-form-fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      className: \"k-form-legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }, \"Please fill in the fields:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"Username\",\n      component: newInput,\n      label: \"Username\",\n      validator: value => new RegExp(/Wombat/).test(value) ? \"\" : \"Please enter a valid Username.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"Password\",\n      component: newInput,\n      label: \"Password\",\n      validator: value => new RegExp(/abc/).test(value) ? \"\" : \"Please enter a valid Password.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"k-form-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"k-button\",\n      disabled: !formRenderProps.allowSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"Submit\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/jiangfangwei/Team11-CM-FrontEnd/src/Login.tsx"],"names":["React","Form","Field","FormElement","Error","Input","newInput","fieldRenderProps","validationMessage","visited","others","Login","e","alert","JSON","stringify","formRenderProps","maxWidth","value","RegExp","test","allowSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,WAAtB,QAAyC,4BAAzC;AACA,SAASC,KAAT,QAAsB,8BAAtB;AAEA,SAASC,KAAT,QAAsB,8BAAtB;;AAGA,IAAIC,QAAQ,GAAIC,gBAAD,IAAsB;AACnC,MAAI;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,OAArB;AAA8B,OAAGC;AAAjC,MAA4CH,gBAAhD;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,oBAAWG,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAGID,OAAO,IAAID,iBAAX,iBACG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,iBAAR,CAJP,CADF;AASD,CAXD;;AAaA,eAAe,SAASG,KAAT,GAAiB;AAC5B,sBACI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAGC,CAAD,IAAOC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,CAAf,EAAkB,IAAlB,EAAwB,CAAxB,CAAD,CAD1B;AAEI,IAAA,MAAM,EAAGI,eAAD,iBACJ,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAU,MAAA,SAAS,EAAE,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAE,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAE,UADV;AAEI,MAAA,SAAS,EAAEX,QAFf;AAGI,MAAA,KAAK,EAAE,UAHX;AAII,MAAA,SAAS,EAAGY,KAAD,IAAY,IAAIC,MAAJ,CAAW,QAAX,EAAqBC,IAArB,CAA0BF,KAA1B,IAAmC,EAAnC,GAAwC,gCAJnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAaI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAE,UADV;AAEI,MAAA,SAAS,EAAEZ,QAFf;AAGI,MAAA,KAAK,EAAE,UAHX;AAII,MAAA,SAAS,EAAGY,KAAD,IAAY,IAAIC,MAAJ,CAAW,KAAX,EAAkBC,IAAlB,CAAuBF,KAAvB,IAAgC,EAAhC,GAAqC,gCAJhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAbJ,CADJ,eAuBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAE,QADV;AAEI,MAAA,SAAS,EAAC,UAFd;AAGI,MAAA,QAAQ,EAAE,CAACF,eAAe,CAACK,WAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAvBJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAwCH","sourcesContent":["import React from \"react\";\nimport { Form, Field, FormElement } from \"@progress/kendo-react-form\";\nimport { Error } from \"@progress/kendo-react-labels\";\nimport Home from \"./Home\";\nimport { Input } from \"@progress/kendo-react-inputs\";\nimport { connectBackends } from \"./services/dataService\";\n\nlet newInput = (fieldRenderProps) => {\n  let { validationMessage, visited, ...others } = fieldRenderProps;\n  return (\n    <div>\n      <Input {...others} />\n      {\n        visited && validationMessage &&\n          (<Error>{validationMessage}</Error>)\n      }\n    </div>\n  );\n};\n\nexport default function Login() {\n    return (\n        <Form\n            onSubmit={(e) => alert(JSON.stringify(e, null, 2))}\n            render={(formRenderProps) => (\n                <FormElement style={{ maxWidth: 1000 }}>\n                    <fieldset className={\"k-form-fieldset\"}>\n                        <legend className={\"k-form-legend\"}>\n                            Please fill in the fields:\n                        </legend>\n                        <div className=\"mb-3\">\n                            <Field\n                                name={\"Username\"}\n                                component={newInput}\n                                label={\"Username\"}\n                                validator={(value) => (new RegExp(/Wombat/).test(value) ? \"\" : \"Please enter a valid Username.\")}\n                            />\n                        </div>\n\n                        <div className=\"mb-3\">\n                            <Field\n                                name={\"Password\"}\n                                component={newInput}\n                                label={\"Password\"}\n                                validator={(value) => (new RegExp(/abc/).test(value) ? \"\" : \"Please enter a valid Password.\")}\n                            />\n                        </div>\n                    </fieldset>\n                    <div className=\"k-form-buttons\">\n                        <button\n                            type={\"submit\"}\n                            className=\"k-button\"\n                            disabled={!formRenderProps.allowSubmit}\n                        >\n                            Submit\n                        </button>\n                    </div>\n                </FormElement>\n            )}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}