{"ast":null,"code":"var _jsxFileName = \"/Users/jiangfangwei/Downloads/Team11-CM-FrontEnd-dev_jiang/src/panels/AllocationPanel.tsx\";\nimport React from \"react\";\nimport { Chart, ChartLegend, ChartSeries, ChartSeriesItem, ChartSeriesLabels, ChartTitle, ChartTooltip } from \"@progress/kendo-react-charts\";\nimport { getFundAllocation } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\nexport default function AllocationPanel() {\n  const [data, setData] = React.useState();\n  React.useEffect(() => {\n    getFundAllocation().then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !data && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Chart, {\n    style: {\n      opacity: data ? \"1\" : \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChartTitle, {\n    text: \"Pie chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ChartSeries, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChartSeriesItem, {\n    type: \"donut\",\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChartSeriesLabels, {\n    content: e => `${e.value}%`,\n    background: \"none\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ChartLegend, {\n    position: \"bottom\",\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ChartTooltip, {\n    render: e => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }\n      }, e.point ? e.point.category : \"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/jiangfangwei/Downloads/Team11-CM-FrontEnd-dev_jiang/src/panels/AllocationPanel.tsx"],"names":["React","Chart","ChartLegend","ChartSeries","ChartSeriesItem","ChartSeriesLabels","ChartTitle","ChartTooltip","getFundAllocation","Loading","AllocationPanel","data","setData","useState","useEffect","then","opacity","e","value","point","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,UANF,EAOEC,YAPF,QAQO,8BARP;AAUA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAGA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACa,QAAN,EAAxB;AACAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBN,IAAAA,iBAAiB,GAAGO,IAApB,CAA0BJ,IAAD,IAAwB;AAC/CC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,sBACE,0CACG,CAACA,IAAD,iBAAS,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAEL,IAAI,GAAG,GAAH,GAAS;AAAxB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,OAAtB;AAA8B,IAAA,IAAI,EAAEA,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AACE,IAAA,OAAO,EAAGM,CAAD,IAAa,GAAEA,CAAC,CAACC,KAAM,GADlC;AAEE,IAAA,UAAU,EAAC,MAFb;AAGE,IAAA,KAAK,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,eAWE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,QAAvB;AAAiC,IAAA,OAAO,EAAE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAGD,CAAD,IAAY;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,CAAC,CAACE,KAAF,GAAUF,CAAC,CAACE,KAAF,CAAQC,QAAlB,GAA6B,EAAnC,CAAP;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAFF,CADF;AAuBD","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartSeriesLabels,\n  ChartTitle,\n  ChartTooltip,\n} from \"@progress/kendo-react-charts\";\n\nimport { getFundAllocation } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\nimport { Allocation } from \"../data/models\";\n\nexport default function AllocationPanel() {\n  const [data, setData] = React.useState<Allocation[]>();\n  React.useEffect(() => {\n    getFundAllocation().then((data: Allocation[]) => {\n      setData(data);\n    });\n  }, []);\n\n  return (\n    <>\n      {!data && <Loading />}\n      <Chart style={{ opacity: data ? \"1\" : \"0\" }}>\n        <ChartTitle text={\"Pie chart\"}></ChartTitle>\n        <ChartSeries>\n          <ChartSeriesItem type=\"donut\" data={data}>\n            <ChartSeriesLabels\n              content={(e: any) => `${e.value}%`}\n              background=\"none\"\n              color=\"#fff\"\n            />\n          </ChartSeriesItem>\n        </ChartSeries>\n        <ChartLegend position={\"bottom\"} visible={true} />\n        <ChartTooltip\n          render={(e: any) => {\n            return <div>{e.point ? e.point.category : \"\"}</div>;\n          }}\n        />\n      </Chart>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}