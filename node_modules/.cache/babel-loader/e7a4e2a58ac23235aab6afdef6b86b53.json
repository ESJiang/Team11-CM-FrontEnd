{"ast":null,"code":"var _jsxFileName = \"/Users/jiangfangwei/Downloads/Team11-CM-FrontEnd-dev_jiang/src/panels/PerformancePanel.tsx\";\nimport React from \"react\";\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle, ChartTooltip } from \"@progress/kendo-react-charts\";\nimport { getPerformance } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\n\nconst renderTooltip = e => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, e.point ? \"$\" + e.point.value.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") : \"\");\n};\n\nexport default function PerformancePanel() {\n  const [data, setData] = React.useState();\n  React.useEffect(() => {\n    getPerformance().then(results => {\n      setData(results);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !data && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Chart, {\n    style: {\n      opacity: data ? \"1\" : \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChartTitle, {\n    text: \"Bar chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ChartCategoryAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChartCategoryAxisItem, {\n    categories: [\"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ChartSeries, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChartSeriesItem, {\n    type: \"line\",\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ChartTooltip, {\n    render: renderTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/jiangfangwei/Downloads/Team11-CM-FrontEnd-dev_jiang/src/panels/PerformancePanel.tsx"],"names":["React","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","ChartTooltip","getPerformance","Loading","renderTooltip","e","point","value","replace","PerformancePanel","data","setData","useState","useEffect","then","results","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,iBAJF,EAKEC,qBALF,EAMEC,UANF,EAOEC,YAPF,QAQO,8BARP;AAUA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,aAAa,GAAIC,CAAD,IAAY;AAChC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CAAC,CAACC,KAAF,GACG,MAAMD,CAAC,CAACC,KAAF,CAAQC,KAAR,CAAcC,OAAd,CAAsB,yBAAtB,EAAiD,KAAjD,CADT,GAEG,EAHN,CADF;AAOD,CARD;;AAUA,eAAe,SAASC,gBAAT,GAA4B;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACkB,QAAN,EAAxB;AACAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBX,IAAAA,cAAc,GAAGY,IAAjB,CAAuBC,OAAD,IAAuB;AAC3CJ,MAAAA,OAAO,CAACI,OAAD,CAAP;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,sBACE,0CACG,CAACL,IAAD,iBAAS,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAEN,IAAI,GAAG,GAAH,GAAS;AAAxB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AACE,IAAA,UAAU,EAAE,CACV,MADU,EAEV,MAFU,EAGV,MAHU,EAIV,MAJU,EAKV,MALU,EAMV,MANU,EAOV,MAPU,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAeE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,IAAI,EAAEA,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,eAkBE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEN,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CAFF,CADF;AAyBD","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartTitle,\n  ChartTooltip,\n} from \"@progress/kendo-react-charts\";\n\nimport { getPerformance } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\n\nconst renderTooltip = (e: any) => {\n  return (\n    <div>\n      {e.point\n        ? \"$\" + e.point.value.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n        : \"\"}\n    </div>\n  );\n};\n\nexport default function PerformancePanel() {\n  const [data, setData] = React.useState<string[]>();\n  React.useEffect(() => {\n    getPerformance().then((results: string[]) => {\n      setData(results);\n    });\n  }, []);\n\n  return (\n    <>\n      {!data && <Loading />}\n      <Chart style={{ opacity: data ? \"1\" : \"0\" }}>\n        <ChartTitle text=\"Bar chart\" />\n        <ChartCategoryAxis>\n          <ChartCategoryAxisItem\n            categories={[\n              \"2014\",\n              \"2015\",\n              \"2016\",\n              \"2017\",\n              \"2018\",\n              \"2019\",\n              \"2020\",\n            ]}\n          />\n        </ChartCategoryAxis>\n        <ChartSeries>\n          <ChartSeriesItem type=\"line\" data={data} />\n        </ChartSeries>\n        <ChartTooltip render={renderTooltip} />\n      </Chart>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}