{"ast":null,"code":"var _jsxFileName = \"/Users/jiangfangwei/Downloads/Team11-CM-FrontEnd-permisson-tilda/src/Login.tsx\";\nimport React from \"react\";\nimport { Form, Field, FormElement } from \"@progress/kendo-react-form\";\nimport { Error } from \"@progress/kendo-react-labels\";\nimport { Input } from \"@progress/kendo-react-inputs\";\n\nconst newInput = fieldRenderProps => {\n  const {\n    validationMessage,\n    visited,\n    ...others\n  } = fieldRenderProps;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({}, others, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })), fieldRenderProps.visited && fieldRenderProps.validationMessage && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, validationMessage));\n};\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ClickEvent = e => {\n      fetch({\n        method: \"post\",\n        url: \"http://localhost:8080/login\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        body: JSON.stringify({\n          'username': e.username,\n          'password': e.password\n        })\n      }).then(res => res.json()).then(jsondata => {\n        console.log(jsondata['username']);\n        this.setState({\n          username: jsondata['username']\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n      window.location.href = \"/Home\";\n    };\n\n    this.state = {\n      username: ''\n    };\n  }\n\n  componentDidUpdate() {\n    global.name = this.state.username;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.ClickEvent,\n      render: formRenderProps => /*#__PURE__*/React.createElement(FormElement, {\n        style: {\n          backgroundColor: \"#C7EDCC\",\n          textAlign: \"center\",\n          maxWidth: 3000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"k-form-fieldset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"legend\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \"Please fill in the fields:\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, this.state.username)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"username\",\n        component: newInput,\n        label: \"username\",\n        validator: value => new RegExp(/a/).test(value) ? \"\" : \"Please enter a valid Username.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"password\",\n        component: newInput,\n        type: \"password\",\n        label: \"password\",\n        validator: value => new RegExp(/1/).test(value) ? \"\" : \"Please enter a valid Password.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"k-form-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"k-button\",\n        disabled: !formRenderProps.allowSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"Submit\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jiangfangwei/Downloads/Team11-CM-FrontEnd-permisson-tilda/src/Login.tsx"],"names":["React","Form","Field","FormElement","Error","Input","newInput","fieldRenderProps","validationMessage","visited","others","Login","Component","constructor","props","ClickEvent","e","fetch","method","url","headers","body","JSON","stringify","username","password","then","res","json","jsondata","console","log","setState","catch","error","window","location","href","state","componentDidUpdate","global","name","render","formRenderProps","backgroundColor","textAlign","maxWidth","value","RegExp","test","allowSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,WAAtB,QAAyC,4BAAzC;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,SAASC,KAAT,QAAsB,8BAAtB;;AAOA,MAAMC,QAAQ,GAAIC,gBAAD,IAAsB;AACnC,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,OAArB;AAA8B,OAAGC;AAAjC,MAA4CH,gBAAlD;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD,oBAAWG,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,EAECH,gBAAgB,CAACE,OAAjB,IAA4BF,gBAAgB,CAACC,iBAA7C,iBACG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,iBAAR,CAHJ,CADJ;AAQH,CAVD;;AAaA,eAAe,MAAMG,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAA8C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,UANmB,GAMLC,CAAD,IAAO;AACZC,MAAAA,KAAK,CAAC;AACFC,QAAAA,MAAM,EAAE,MADN;AAEFC,QAAAA,GAAG,EAAE,6BAFH;AAGFC,QAAAA,OAAO,EAAE;AACL,yCAA+B;AAD1B,SAHP;AAMFC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChB,sBAAYP,CAAC,CAACQ,QADE;AAEhB,sBAAYR,CAAC,CAACS;AAFE,SAAf;AANH,OAAD,CAAL,CAYHC,IAZG,CAYGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZX,EAaHF,IAbG,CAaGG,QAAD,IAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAAC,UAAD,CAApB;AACA,aAAKG,QAAL,CAAc;AAACR,UAAAA,QAAQ,EAACK,QAAQ,CAAC,UAAD;AAAlB,SAAd;AACH,OAhBG,EAiBHI,KAjBG,CAiBIC,KAAD,IAAS;AACZJ,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACH,OAnBG;AAoBJC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,OAArB;AACH,KA5BkB;;AAEf,SAAKC,KAAL,GAAa;AACTd,MAAAA,QAAQ,EAAC;AADA,KAAb;AAGH;;AAyBDe,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,MAAM,CAACC,IAAP,GAAc,KAAKH,KAAL,CAAWd,QAAzB;AACH;;AAEDkB,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,IAAD;AACA,MAAA,QAAQ,EAAE,KAAK3B,UADf;AAEA,MAAA,MAAM,EAAG4B,eAAD,iBACJ,oBAAC,WAAD;AACA,QAAA,KAAK,EAAE;AACHC,UAAAA,eAAe,EAAE,SADd;AAEHC,UAAAA,SAAS,EAAE,QAFR;AAGHC,UAAAA,QAAQ,EAAE;AAHP,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOA;AAAU,QAAA,SAAS,EAAE,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKR,KAAL,CAAWd,QAAf,CAFA,CADA,eAKA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,KAAD;AACA,QAAA,IAAI,EAAE,UADN;AAEA,QAAA,SAAS,EAAElB,QAFX;AAGA,QAAA,KAAK,EAAE,UAHP;AAIA,QAAA,SAAS,EAAGyC,KAAD,IACP,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB,IACE,EADF,GAEE,gCAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CALA,eAiBA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,KAAD;AACA,QAAA,IAAI,EAAE,UADN;AAEA,QAAA,SAAS,EAAEzC,QAFX;AAGA,QAAA,IAAI,EAAE,UAHN;AAIA,QAAA,KAAK,EAAE,UAJP;AAKA,QAAA,SAAS,EAAGyC,KAAD,IACP,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB,IACE,EADF,GAEE,gCARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAjBA,CAPA,eAsCA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AACA,QAAA,IAAI,EAAE,QADN;AAEA,QAAA,SAAS,EAAC,UAFV;AAGA,QAAA,QAAQ,EAAE,CAACJ,eAAe,CAACO,WAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CAtCA,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAuDH;;AA3FwD","sourcesContent":["import React from \"react\";\nimport { Form, Field, FormElement } from \"@progress/kendo-react-form\";\nimport { Error } from \"@progress/kendo-react-labels\";\nimport { Input } from \"@progress/kendo-react-inputs\";\nimport { value, CustomNodeJsGlobal } from \"./data/models\";\nimport axios from \"axios\";\n//import { user } from \"./layout/DrawerRouterContainer\";\n\ndeclare var global: CustomNodeJsGlobal;\n\nconst newInput = (fieldRenderProps) => {\n    const { validationMessage, visited, ...others } = fieldRenderProps;\n    return (\n        <div>\n        <Input {...others} />\n        {fieldRenderProps.visited && fieldRenderProps.validationMessage && (\n            <Error>{validationMessage}</Error>\n            )}\n        </div>\n        );\n};\n\n\nexport default class Login extends React.Component<{},value> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:''\n        };\n    }\n    ClickEvent = (e) => {\n            fetch({\n                method: \"post\",\n                url: \"http://localhost:8080/login\",\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n                body:JSON.stringify({\n                    'username': e.username,\n                    'password': e.password})\n                ,\n            }\n        )\n        .then((res) => res.json())\n        .then((jsondata)=>{\n            console.log(jsondata['username'])\n            this.setState({username:jsondata['username']})\n        })\n        .catch((error)=>{\n            console.error(error);\n        })\n        window.location.href=\"/Home\"\n    }\n\n    componentDidUpdate(){\n        global.name = this.state.username;\n    }\n\n    render(){\n        return (\n            <Form\n            onSubmit={this.ClickEvent}\n            render={(formRenderProps) => (\n                <FormElement\n                style={{\n                    backgroundColor: \"#C7EDCC\",\n                    textAlign: \"center\",\n                    maxWidth: 3000,\n                }}\n                >\n                <fieldset className={\"k-form-fieldset\"}>\n                <legend>\n                <i>Please fill in the fields:</i>\n                <p>{this.state.username}</p>\n                </legend>\n                <div className=\"mb-3\">\n                <Field\n                name={\"username\"}\n                component={newInput}\n                label={\"username\"}\n                validator={(value) =>\n                    new RegExp(/a/).test(value)\n                    ? \"\"\n                    : \"Please enter a valid Username.\"\n                }\n                />\n                </div>\n                <div className=\"mb-3\">\n                <Field\n                name={\"password\"}\n                component={newInput}\n                type={\"password\"}\n                label={\"password\"}\n                validator={(value) =>\n                    new RegExp(/1/).test(value)\n                    ? \"\"\n                    : \"Please enter a valid Password.\"\n                }\n                />\n                </div>\n                </fieldset>\n                <div className=\"k-form-buttons\">\n                <button\n                type={\"submit\"}\n                className=\"k-button\"\n                disabled={!formRenderProps.allowSubmit}\n                >\n                Submit\n                </button>\n                </div>\n                </FormElement>\n                )}\n            />\n            );\n    }\n}"]},"metadata":{},"sourceType":"module"}